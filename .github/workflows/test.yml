name: test

on:
  - push
  - pull_request

jobs:
  linux-gcc-sanitize:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: gcc
        run: |
          ./configure --pedantic --sanitize
          make -j`nproc` test

  linux-gcc-i386:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: dependenices
        run: sudo apt-get update && sudo apt-get install gcc-multilib
      - name: test
        env:
          CC: gcc
          ASFLAGS: -m32
          CFLAGS: -m32
          LDFLAGS: -m32
        run: |
          ./configure --pedantic
          make -j`nproc` test

  linux-gcc-4:
    runs-on: ubuntu-22.04
    container: ghcr.io/mptre/gcc:4
    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: gcc
          CFLAGS: -O2 -Werror
        run: |
          # Skip pedantic due to compiler being ancient.
          ./configure
          make -j`nproc` test

  linux-clang-sanitize:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: clang
        run: |
          ./configure --pedantic --sanitize
          make -j`nproc` test

  macos-clang-sanitize:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: clang
        run: |
          ./configure --pedantic --sanitize
          make -j`sysctl -n hw.logicalcpu` test

  valgrind:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: dependenices
        run: sudo apt-get update && sudo apt-get install valgrind
      - name: test
        env:
          CC: gcc
          EXEC: valgrind
          VALGRIND_OPTS: >
            --quiet
            --error-exitcode=1
            --errors-for-leak-kinds=all
            --leak-check=full
            --show-leak-kinds=all
        run: |
          ./configure --pedantic
          make -j`nproc` test

  musl:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: dependenices
        run: sudo apt-get update && sudo apt-get install musl-tools
      - name: test
        env:
          CC: musl-gcc
        run: |
          ./configure --pedantic
          make -j`nproc` test

  ndebug:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: gcc
          CPPFLAGS: -DNDEBUG
        run: |
          ./configure --pedantic
          make -j`nproc` test

  fuzz:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: dependenices
        run: sudo apt-get update && sudo apt-get install afl
      - name: test
        env:
          CC: afl-gcc
        run: |
          ./configure --pedantic --fuzz afl
          make -j`nproc` fuzz

  clang-tidy:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: clang-tidy
        run: |
          ./configure --pedantic
          make lint-clang-tidy

  cppcheck:
    runs-on: ubuntu-22.04
    container: ghcr.io/mptre/cppcheck:latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: cppcheck
        run: |
          ./configure --pedantic
          make lint-cppcheck
