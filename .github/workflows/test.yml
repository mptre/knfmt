name: test

on:
  - push
  - pull_request

jobs:
  linux-clang-sanitize-address:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: clang
        run: |
          ./configure --pedantic --sanitize address
          make -j`nproc` test

  linux-clang-sanitize-memory:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: clang
        run: |
          ./configure --pedantic --sanitize memory
          make -j`nproc` test

  linux-gcc-fuzz:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: dependenices
        run: sudo apt-get update && sudo apt-get install afl
      - name: test
        env:
          CC: afl-gcc
        run: |
          ./configure --pedantic --fuzz afl
          make -j`nproc` fuzz

  linux-gcc-i386:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: dependenices
        run: sudo apt-get update && sudo apt-get install gcc-multilib
      - name: test
        env:
          CC: gcc
          ASFLAGS: -m32
          CFLAGS: -m32
          LDFLAGS: -m32
        run: |
          ./configure --pedantic
          make -j`nproc` test

  linux-gcc-musl:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: dependenices
        run: sudo apt-get update && sudo apt-get install musl-tools
      - name: test
        env:
          CC: musl-gcc
        run: |
          ./configure --pedantic
          make -j`nproc` test

  linux-gcc-ndebug:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: gcc
          CPPFLAGS: -DNDEBUG
        run: |
          ./configure --pedantic
          make -j`nproc` test

  linux-gcc-sanitize-address:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: gcc
        run: |
          ./configure --pedantic --sanitize address
          make -j`nproc` test

  linux-gcc-valgrind:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: dependenices
        run: sudo apt-get update && sudo apt-get install valgrind
      - name: test
        env:
          CC: gcc
          EXEC: valgrind
        run: |
          ./configure --pedantic
          make -j`nproc` test

  macos-clang-sanitize-address:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        env:
          CC: clang
        run: |
          ./configure --pedantic --sanitize address
          make -j`sysctl -n hw.logicalcpu` test
