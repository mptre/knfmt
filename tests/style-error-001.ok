.clang-format:14: integer Integer<14:14>("2147483648") too large
.clang-format:15: integer Integer<15:14>("-2147483648") too large
.clang-format:16: integer Integer<16:14>("9999999999") too large
.clang-format:2: unknown value Integer<2:29>("0") for option Keyword<2:1>("AlwaysBreakAfterReturnType")
AlwaysBreakAfterReturnType: 0
                            ^
.clang-format:3: unknown value Keyword<3:14>("None") for option Keyword<3:1>("ColumnLimit")
ColumnLimit: None
             ^^^^
.clang-format:4: unknown value Keyword<4:26>("None") for option Keyword<4:1>("ContinuationIndentWidth")
ContinuationIndentWidth: None
                         ^^^^
.clang-format:5: unknown value Keyword<5:14>("None") for option Keyword<5:1>("IndentWidth")
IndentWidth: None
             ^^^^
.clang-format:6: unknown value Integer<6:9>("0") for option Keyword<6:1>("UseTab")
UseTab: 0
        ^
.clang-format:7: unknown option Unknown<7:1>("Nein")
Nein: None # unknown option
^^^^
.clang-format:8: unknown option Keyword<8:1>("None")
None: 0 # known keyword but not an option
^^^^
.clang-format:9: unknown value String<9:10>("string") for option Keyword<9:1>("UseTab")
UseTab: 'string' # unknown value
         ^^^^^^
.clang-format:10: unknown option Unknown<10:1>("ForEachMacros")
ForEachMacros:
^^^^^^^^^^^^^
.clang-format:13: unknown value Keyword<13:9>("false") for option Keyword<13:1>("UseTab")
UseTab: false # ensure options after sequences are detected
        ^^^^^
.clang-format:17: unknown value Integer<17:24>("0") for option Keyword<17:1>("AlignAfterOpenBracket")
AlignAfterOpenBracket: 0
                       ^
